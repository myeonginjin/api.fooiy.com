# Generated by Django 3.1.5 on 2022-12-14 12:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import feeds.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('shops', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='기록 pk')),
                ('comment', models.CharField(blank=True, help_text='ex) 여기 진짜 맛있어요!', max_length=500, null=True, verbose_name='기록 작성자 코멘트')),
                ('taste_evaluation', models.PositiveSmallIntegerField(default=50, help_text='좋다 : 100, 보통 : 50, 싫다 : 0', verbose_name='맛 평가')),
                ('fooiyti', models.CharField(blank=True, choices=[('ENTC', 'ENTC'), ('ENTA', 'ENTA'), ('ENFA', 'ENFA'), ('ENFC', 'ENFC'), ('ESTC', 'ESTC'), ('ESTA', 'ESTA'), ('ESFA', 'ESFA'), ('ESFC', 'ESFC'), ('INTC', 'INTC'), ('INTA', 'INTA'), ('INFA', 'INFA'), ('INFC', 'INFC'), ('ISTC', 'ISTC'), ('ISTA', 'ISTA'), ('ISFA', 'ISFA'), ('ISFC', 'ISFC')], max_length=4, null=True, verbose_name='기록 작성자 푸이티아이')),
                ('is_exposure', models.BooleanField(blank=True, default=True, null=True, verbose_name='기록 공개 여부')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='생성일')),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='record', to=settings.AUTH_USER_MODEL)),
                ('menu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='record', to='shops.menu')),
                ('shop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='record', to='shops.shop')),
            ],
            options={
                'verbose_name': '4.1 기록 정보',
                'verbose_name_plural': '4.1 기록 정보',
            },
        ),
        migrations.CreateModel(
            name='Pioneer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='개척 pk')),
                ('menu_name', models.CharField(blank=True, help_text='ex) 맵도리탕', max_length=50, null=True, verbose_name='메뉴 명')),
                ('menu_price', models.PositiveIntegerField(default=0, help_text='ex) 12500', null=True, verbose_name='메뉴 가격')),
                ('menu_category', models.CharField(blank=True, choices=[('MAIN', '메인'), ('SET', '세트'), ('SIDE', '사이드'), ('BEVERAGE', '음료'), ('LIQUOR', '주류')], max_length=10, null=True, verbose_name='메뉴 카테고리')),
                ('is_best_menu', models.BooleanField(blank=True, default=False, help_text='매장의 대표메뉴 인지', null=True, verbose_name='대표 메뉴 여부')),
                ('comment', models.CharField(blank=True, help_text='ex) 여기 진짜 맛있어요!', max_length=500, null=True, verbose_name='기록 작성자 코멘트')),
                ('taste_evaluation', models.PositiveSmallIntegerField(default=50, help_text='좋다 : 100, 보통 : 50, 싫다 : 0', null=True, verbose_name='맛 평가')),
                ('fooiyti', models.CharField(blank=True, choices=[('ENTC', 'ENTC'), ('ENTA', 'ENTA'), ('ENFA', 'ENFA'), ('ENFC', 'ENFC'), ('ESTC', 'ESTC'), ('ESTA', 'ESTA'), ('ESFA', 'ESFA'), ('ESFC', 'ESFC'), ('INTC', 'INTC'), ('INTA', 'INTA'), ('INFA', 'INFA'), ('INFC', 'INFC'), ('ISTC', 'ISTC'), ('ISTA', 'ISTA'), ('ISFA', 'ISFA'), ('ISFC', 'ISFC')], max_length=4, null=True, verbose_name='개척 작성자 푸이티아이')),
                ('image_1', models.ImageField(blank=True, null=True, upload_to=feeds.models.feeds_pioneer_image_upload_url, verbose_name='개척 이미지')),
                ('image_2', models.ImageField(blank=True, null=True, upload_to=feeds.models.feeds_pioneer_image_upload_url, verbose_name='개척 이미지')),
                ('image_3', models.ImageField(blank=True, null=True, upload_to=feeds.models.feeds_pioneer_image_upload_url, verbose_name='개척 이미지')),
                ('image_4', models.ImageField(blank=True, null=True, upload_to=feeds.models.feeds_pioneer_image_upload_url, verbose_name='개척 이미지')),
                ('image_5', models.ImageField(blank=True, null=True, upload_to=feeds.models.feeds_pioneer_image_upload_url, verbose_name='개척 이미지')),
                ('shop_name', models.CharField(blank=True, help_text='ex) 맵도리탕 수원화서점', max_length=50, null=True, verbose_name='매장명')),
                ('category1', models.CharField(blank=True, choices=[('CUTLET', '돈까스'), ('RAW/SUSHI', '회/초밥'), ('JAPANESE', '일식'), ('CHINESE', '중식'), ('CHICKEN', '치킨'), ('KOREAN', '한식'), ('SEAFOOD', '해산물'), ('NOODLE', '국수'), ('SNACKBAR', '분식'), ('BURGER', '햄버거'), ('PIZZA', '피자'), ('WESTERN', '양식'), ('MEAT/ROAST', '고기/구이'), ('PETTITOES/BOSSAM', '족발/보쌈'), ('ASIAN', '아시안'), ('TOAST/SANDWICH', '토스트/샌드위치'), ('LUNCHBOX/PORRIDGE', '도시락/죽'), ('PUB', '요리주점'), ('SALAD', '샐러드'), ('BAKERY/CAFE', '베이커리/카페')], max_length=20, null=True, verbose_name='매장 카테고리1')),
                ('category2', models.CharField(blank=True, choices=[('CUTLET', '돈까스'), ('RAW/SUSHI', '회/초밥'), ('JAPANESE', '일식'), ('CHINESE', '중식'), ('CHICKEN', '치킨'), ('KOREAN', '한식'), ('SEAFOOD', '해산물'), ('NOODLE', '국수'), ('SNACKBAR', '분식'), ('BURGER', '햄버거'), ('PIZZA', '피자'), ('WESTERN', '양식'), ('MEAT/ROAST', '고기/구이'), ('PETTITOES/BOSSAM', '족발/보쌈'), ('ASIAN', '아시안'), ('TOAST/SANDWICH', '토스트/샌드위치'), ('LUNCHBOX/PORRIDGE', '도시락/죽'), ('PUB', '요리주점'), ('SALAD', '샐러드'), ('BAKERY/CAFE', '베이커리/카페')], max_length=20, null=True, verbose_name='매장 카테고리2')),
                ('category3', models.CharField(blank=True, choices=[('CUTLET', '돈까스'), ('RAW/SUSHI', '회/초밥'), ('JAPANESE', '일식'), ('CHINESE', '중식'), ('CHICKEN', '치킨'), ('KOREAN', '한식'), ('SEAFOOD', '해산물'), ('NOODLE', '국수'), ('SNACKBAR', '분식'), ('BURGER', '햄버거'), ('PIZZA', '피자'), ('WESTERN', '양식'), ('MEAT/ROAST', '고기/구이'), ('PETTITOES/BOSSAM', '족발/보쌈'), ('ASIAN', '아시안'), ('TOAST/SANDWICH', '토스트/샌드위치'), ('LUNCHBOX/PORRIDGE', '도시락/죽'), ('PUB', '요리주점'), ('SALAD', '샐러드'), ('BAKERY/CAFE', '베이커리/카페')], max_length=20, null=True, verbose_name='매장 카테고리3')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='매장 주소')),
                ('state', models.CharField(choices=[('CONFIRM', '검수'), ('SUCCESS', '성공'), ('REJECT', '반려'), ('ERROR', '에러')], default='CONFIRM', max_length=7, null=True, verbose_name='개척 상태')),
                ('error_message', models.CharField(blank=True, max_length=100, null=True, verbose_name='에러 메시지')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='검수 완료일')),
                ('reject_reason', models.CharField(blank=True, choices=[('should be main menu for first shop', '메인 혹은 세트 메뉴만 등록 가능하여 개척이 반려되었어요.'), ('does not suitable comment', '부적절한 코멘트 사용으로 개척이 반려되었어요.'), ('does not exist shop', '등록하신 음식점을 찾을 수 없어 개척이 반려되었어요.'), ('does not suitable image', '사진 등록 규정에 맞지 않아 개척이 반려되었어요.'), ('already exist pioneered', '이미 개척 완료된 음식이므로 기록으로 등록되었습니다.'), ('pioneer is only able to one menu', '한 번에 한 메뉴만 등록 가능하여 개척이 반려되었어요.'), ('does not satisfy fooiy rule', '푸이 내부 규정에 의해 개척이 반려되었어요.')], help_text='개척 반려시 반드시 선택해 주세요! 주의) 유저에게 푸시 메시지로 나갑니다!', max_length=40, null=True, verbose_name='개척 반려 사유')),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pioneer', to=settings.AUTH_USER_MODEL, verbose_name='개척자')),
                ('menu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pioneer', to='shops.menu')),
                ('shop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pioneer', to='shops.shop', verbose_name='매장')),
            ],
            options={
                'verbose_name': '4.2 개척 정보',
                'verbose_name_plural': '4.2 개척 정보',
            },
        ),
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='피드 pk')),
                ('fooiyti', models.CharField(blank=True, choices=[('ENTC', 'ENTC'), ('ENTA', 'ENTA'), ('ENFA', 'ENFA'), ('ENFC', 'ENFC'), ('ESTC', 'ESTC'), ('ESTA', 'ESTA'), ('ESFA', 'ESFA'), ('ESFC', 'ESFC'), ('INTC', 'INTC'), ('INTA', 'INTA'), ('INFA', 'INFA'), ('INFC', 'INFC'), ('ISTC', 'ISTC'), ('ISTA', 'ISTA'), ('ISFA', 'ISFA'), ('ISFC', 'ISFC')], max_length=4, null=True, verbose_name='피드 작성자 푸이티아이')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='피드 설명')),
                ('taste_evaluation', models.PositiveSmallIntegerField(default=50, help_text='좋다 : 99, 보통 : 50, 싫다 : 0', verbose_name='맛 평가')),
                ('type', models.CharField(blank=True, choices=[('PIONEER', '개척'), ('RECORD', '기록')], max_length=15, null=True, verbose_name='피드 타입')),
                ('is_exposure', models.BooleanField(blank=True, default=True, null=True, verbose_name='피드 공개 여부')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='생성일')),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feed', to=settings.AUTH_USER_MODEL)),
                ('menu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feed', to='shops.menu')),
                ('shop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feed', to='shops.shop')),
            ],
            options={
                'verbose_name': '4.3 피드 정보',
                'verbose_name_plural': '4.3 피드 정보',
            },
        ),
    ]
